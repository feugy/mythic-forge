// cross-browser compatibility
transition(args...)
  -wekbit-transition args
  -moz-transition args
  transition args

transform(args...)
  -webkit-transform args
  -moz-transform args
  transform args

perspective(args...)
  -webkit-perspective args
  -moz-perspective args
  perspective args

box-sizing(args...)
  -webkit-box-sizing args
  -moz-box-sizing args
  box-sizing args

// Flexible box model compatibility
display(value)
  if value == box
    display -webkit-box
    display -moz-box
    display box
  else if value == inline-box
    display -webkit-inline-box
    display -moz-inline-box
    display inline-box
  else
    display value

box-flex(args...)
  -webkit-box-flex args
  -moz-box-flex args
  box-flex args

box-ordinal-group(args...)
  -webkit-box-ordinal-group args
  -moz-box-ordinal-group args
  box-ordinal-group args

box-pack(args...)
  -webkit-box-pack args
  -moz-box-pack args
  box-pack args

box-direction(args...)
  -webkit-box-direction args
  -moz-box-direction args
  box-direction args

box-align(args...)
  -webkit-box-align args
  -moz-box-align args
  box-align args

box-orient(args...)
  -webkit-box-orient args
  -moz-box-orient args
  box-orient args
  
// Positionnate the current selector to take all available space inside parent.
// Parent must be positionnate, because the current selector wil be absolute
//
// @param paddingTop [String] top padding with unit, 0 by default.
// @param paddingRight [String] right padding with unit, 0 by default.
// @param paddingBottom [String] bottom padding with unit, 0 by default.
// @param paddingLeft [String] left padding with unit, 0 by default.
takeSpace(paddingTop = 0, paddingRight = 0, paddingBottom = 0, paddingLeft = 0)
  position absolute
  top paddingTop
  right paddingRight is defined ? paddingRight : paddingTop
  bottom paddingBottom is defined ? paddingBottom : paddingTop
  left paddingLeft is defined ? paddingLeft : paddingRight is defined ? paddingRight : paddingTop

// Specify background for table headers
table-header()
  background-image url(images/ui-bg_highlight-soft_75_cccccc_1x100.png)
  background-repeat repeat-x 
  background-position 50% 50%
  background-color #CCCCCC

// Specify inactive state to the current selector (text sriked and inactive font color)
inactive()
  color inactiveColor
  text-decoration line-through

// Specify hover behaviour to the current selector (background change with transition and cursor)
hoverable()
  cursor pointer
  transition all 250ms

  &:hover
    background-color hoverColor

// Set icon background to the current selector
//
// @param size [Number] icon size (square size) without unit. Used in the icon filename
// @param margin [String] icon margin, as defined in browser. 0 by default
icon(size, margin = 0)
  display inline-block
  background-image url(s('images/icons-%s.png', size))
  background-repeat no-repeat
  height (size)px
  width (size)px
  vertical-align -0.5em
  margin margin

// Add to a specified selector a "type" icon background
//
// @param selector [String] the concerned selector
// @param size [Number] icon size (square size) without unit. Used in the icon filename
// @param margin [String] icon margin, as defined in browser. 0 by default
typeIcons(selector, size, margin = 0) 
  // type icons 
  {selector}
    icon(size, margin)
    left 3px
    top 3px

  // type icons
  for icon, i in map event-type _ field-type item-type player rule turn-rule
    {selector}.{icon}
      background-position -1*i*unit(size, 'px') -3*unit(size, 'px')

// Generate selectors for the 5 size of icons: 'x-small', 'small', '', 'big' and 'x-big'.
// Selector also inside elements 'a' and 'button'
//
// @param names [Array<String>] list of icons names used inside selectors
// @param row [Number] row inside the icon sprite file where icons are used; 0 by default
multiIcon(names, row = 0)
  for name, i in names

    a > .ui-icon.{name} 
      top 1px
      left 1px

    button > .ui-icon.{name} 
      top 3px
      left 3px

    .ui-icon.{name}.x-small
      icon 16
      background-position unit(-16*i, 'px') unit(-16*row, 'px')

    .ui-icon.{name}.small
      icon 25
      background-position unit(-25*i, 'px') unit(-25*row, 'px')

    .ui-icon.{name}
      icon 35
      background-position unit(-35*i, 'px') unit(-35*row, 'px')

    .ui-icon.{name}.big
      icon 50
      background-position unit(-50*i, 'px') unit(-50*row, 'px')

    .ui-icon.{name}.x-big
      icon 75
      background-position unit(-75*i, 'px') unit(-75*row, 'px')

// Style for connect buttons: images/login.png. 3 states supported: normal, hover and active
//
// @param selector [String] selector on which apply connect button styles
// @param line [Number] line in the image. (75px height, divided by 3)
connect-button(selector, line)
  // normal: from 0 to -25
  {selector}
    display inline-block
    box-sizing border-box
    height 25px
    padding-left 35px
    background-image url('images/login.png')
    background-position 0px unit(-75*line, 'px')
    line-height 25px

  {selector}:after
    content ''
    float right
    background-image url('images/login.png')
    background-position right unit(-75*line, 'px')
    height 25px
    width 15px

  // hover: from -25 to -50
  {selector}:hover
    background-position 0px unit((-75*line) - 25, 'px')
  {selector}:hover:after
    background-position right unit((-75*line) - 25, 'px')

  // active: from -50 to -75
  {selector}:active
    background-position 0px unit((-75*line) - 50, 'px')
  {selector}:active:after
    background-position right unit((-75*line) - 50, 'px')